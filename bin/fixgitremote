#!/usr/bin/env perl

use strict;
use warnings;

main(@ARGV);
exit 0;

sub get_remote_url {
    my ($remote) = @_;

    my $url = qx( git remote get-url $remote ) or die;
    chomp $url;

    return $url;
}

sub split_url {
    my ($url) = @_;

    my ($host, $org, $repo) = ($url =~ m{
        (?:https://|git://|git@)
            (.*?)   # host
        [:/]
            (.*?)   # org
        /
            (.*?)   # repo
        \.git
    }x);

    return ($host, $org, $repo);
}

sub make_ssh_url {
    my ($host, $org, $repo) = @_;
    return "git\@$host:$org/$repo.git";
}

sub make_https_url {
    my ($host, $org, $repo) = @_;
    return "https://$host/$org/$repo.git";
}

sub needs_auth {
    my ($host, $org, $repo) = @_;
    return $host eq 'gh.sdintra.net';
}

sub make_push_url {
    return make_ssh_url(@_);
}

sub make_fetch_url {
    return needs_auth(@_) ? make_ssh_url(@_) : make_https_url(@_);
}

sub main {
    my $remote = $ARGV[0] // 'origin';

    my $url = get_remote_url($remote);
    my @parts = split_url($url);

    my $push_url = make_push_url(@parts);
    my $fetch_url = make_fetch_url(@parts);

    system("git remote set-url $remote $fetch_url");
    system("git remote set-url --push $remote $push_url");
    system("git remote -v");    # as confirmation
}
